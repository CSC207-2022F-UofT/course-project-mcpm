import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'java'
    id 'application'
    id 'maven-publish'
    id 'checkstyle'
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

group 'org.hydev.csc207'
version '0.1.0.435'

application {
    mainClass = 'org.hydev.mcpm.client.arguments.ArgsParser'
}

repositories {
    mavenCentral()

    // Spigot MC
    maven {
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
        content {
            includeGroup 'org.bukkit'
            includeGroup 'org.spigotmc'
        }
    }
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(19))
    }
}

checkstyle {
    // assign the latest checkstyle version explicitly, since the default version is very old
    toolVersion = '10.3.4'
    configFile = rootProject.file('.github/checkstyle.xml')

    ignoreFailures = false
    maxWarnings = 5
}

task checkStyle(type: GradleBuild) {
    tasks = ['checkStyleMain', 'checkStyleTest']
}


dependencies {
    // The Spigot API with no shadowing. Requires the OSS repo.
    compileOnly 'org.spigotmc:spigot-api:1.19-R0.1-SNAPSHOT'

    // Argument parser
    // https://mvnrepository.com/artifact/net.sourceforge.argparse4j/argparse4j
    implementation 'net.sourceforge.argparse4j:argparse4j:0.9.0'

    // Apache HTTP Client
    // https://mvnrepository.com/artifact/org.apache.httpcomponents.client5/httpclient5-fluent
    implementation 'org.apache.httpcomponents.client5:httpclient5-fluent:5.2-beta1'

    // Json/YAML parser: Jackson
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
    implementation 'com.fasterxml.jackson.core:jackson-core:2.14.0'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-yaml
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.14.0'

    // General utilities
    // https://mvnrepository.com/artifact/com.google.guava/guava
    implementation 'com.google.guava:guava:31.1-jre'

    // IDE annotations
    // https://mvnrepository.com/artifact/org.jetbrains/annotations
    implementation 'org.jetbrains:annotations:23.0.0'

    // Terminal Hacks
    // https://mvnrepository.com/artifact/org.fusesource.jansi/jansi
    implementation 'org.fusesource.jansi:jansi:2.4.0'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    // CSV Parser
    // https://mvnrepository.com/artifact/com.opencsv/opencsv/5.7.1
    implementation 'com.opencsv:opencsv:5.7.1'

    // ZSTD Compression
    // https://mvnrepository.com/artifact/com.github.luben/zstd-jni
    implementation 'com.github.luben:zstd-jni:1.5.2-5'

    // Unit tests
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
    testRuntimeOnly 'org.slf4j:slf4j-simple:2.0.4'
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        filter ReplaceTokens, tokens: [version: version]
    }
    duplicatesStrategy = 'include'
}

publishing {
    repositories {
        maven {
            name = "github"
            url = "https://maven.pkg.github.com/CSC207-2022F-UofT/mcpm"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        register("jar", MavenPublication) {
            from(components["java"])
            pom {
                url.set("https://github.com/CSC207-2022F-UofT/mcpm.git")
            }
        }
    }
}

if (hasProperty('buildScan')) {
    buildScan {
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'
    }
}

sourceSets {
    test {
        resources {
            srcDir "test"
        }
    }
}

task printCp {
    doLast {
        System.err.println sourceSets.test.runtimeClasspath.asPath
    }
}

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
}
